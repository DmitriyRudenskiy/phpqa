<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
  <duplication lines="4" tokens="12">
    <file path="/mnt/DATA/www/phpqa/tests/Config/ConfigTest.php" line="57"/>
    <file path="/mnt/DATA/www/phpqa/tests/Config/ConfigTest.php" line="79"/>
    <file path="/mnt/DATA/www/phpqa/tests/Config/ConfigTest.php" line="87"/>
    <codefragment>        $config = new Config();
        $config-&gt;loadUserConfig(__DIR__);
        $this-&gt;shouldStopPhpqa();
        $config-&gt;path('phpcs.standard');
</codefragment>
  </duplication>
  <duplication lines="9" tokens="19">
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="26"/>
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="36"/>
    <codefragment>        'phpcs' =&gt; array(
            'optionSeparator' =&gt; '=',
            'xml' =&gt; ['checkstyle.xml'],
            'errorsXPath' =&gt; [
                # ignoreWarnings =&gt; xpath
                false =&gt; '//checkstyle/file/error',
                true =&gt; '//checkstyle/file/error[@severity="error"]',
            ],
            'composer' =&gt; 'squizlabs/php_codesniffer',
</codefragment>
  </duplication>
  <duplication lines="4" tokens="11">
    <file path="/mnt/DATA/www/phpqa/tests/OptionsTest.php" line="11"/>
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="160"/>
    <codefragment>        'buildDir' =&gt; 'build/',
        'ignoredDirs' =&gt; 'vendor',
        'ignoredFiles' =&gt; '',
        'tools' =&gt; 'phploc,phpcpd,phpcs,pdepend,phpmd,phpmetrics',
</codefragment>
  </duplication>
  <duplication lines="2" tokens="13">
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="255"/>
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="268"/>
    <codefragment>            $this-&gt;options-&gt;ignore-&gt;bergmann(),
            $this-&gt;options-&gt;getAnalyzedDirs(' '),
</codefragment>
  </duplication>
  <duplication lines="3" tokens="13">
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="302"/>
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="342"/>
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="360"/>
    <codefragment>            'extensions' =&gt; $this-&gt;config-&gt;csv('extensions')
        );
        if ($this-&gt;options-&gt;isSavedToFiles) {
</codefragment>
  </duplication>
  <duplication lines="4" tokens="22">
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="302"/>
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="381"/>
    <codefragment>            'extensions' =&gt; $this-&gt;config-&gt;csv('extensions')
        );
        if ($this-&gt;options-&gt;isSavedToFiles) {
            $reports = ['checkstyle' =&gt; 'checkstyle.xml'] + $this-&gt;config-&gt;value('phpcs.reports.file');
</codefragment>
  </duplication>
  <duplication lines="4" tokens="16">
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="352"/>
    <file path="/mnt/DATA/www/phpqa/src/CodeAnalysisTasks.php" line="451"/>
    <codefragment>        $analyzedDirs = $this-&gt;options-&gt;getAnalyzedDirs();
        $analyzedDir = reset($analyzedDirs);
        if (count($analyzedDirs) &gt; 1) {
            $this-&gt;say("&lt;error&gt;phpmetrics analyzes only first directory {$analyzedDir}&lt;/error&gt;");
</codefragment>
  </duplication>
  <duplication lines="4" tokens="10">
    <file path="/mnt/DATA/www/phpqa/src/Task/NonParallelExecV0.php" line="33"/>
    <file path="/mnt/DATA/www/phpqa/src/Task/NonParallelExecV1.php" line="62"/>
    <codefragment>        $this-&gt;printTaskInfo(
            "Output for &lt;fg=white;bg=magenta&gt; " . $process-&gt;getCommandLine()." &lt;/fg=white;bg=magenta&gt;"
        );
        $this-&gt;getOutput()-&gt;writeln($process-&gt;getOutput(), OutputInterface::OUTPUT_RAW);
</codefragment>
  </duplication>
  <duplication lines="5" tokens="13">
    <file path="/mnt/DATA/www/phpqa/src/Task/ToolVersions.php" line="60"/>
    <file path="/mnt/DATA/www/phpqa/src/Task/ToolVersions.php" line="80"/>
    <codefragment>            $versionCommand = "{$customBinary} --version";
            $version = $this-&gt;loadVersionFromConsoleCommand($versionCommand);
            $composerInfo = [
                'version' =&gt; $version,
                'version_normalized' =&gt; $version,
</codefragment>
  </duplication>
</pmd-cpd>
